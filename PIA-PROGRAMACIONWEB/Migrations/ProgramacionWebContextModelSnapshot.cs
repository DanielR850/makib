// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PIA_PROGRAMACIONWEB.Models.dbModels;

#nullable disable

namespace PIA_PROGRAMACIONWEB.Migrations
{
    [DbContext(typeof(ProgramacionWebContext))]
    partial class ProgramacionWebContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.AsistenciaEnsayo", b =>
                {
                    b.Property<int>("IdEnsayo")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<bool>("ConfirmoAsistencia")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("FechaRespuesta")
                        .HasColumnType("date");

                    b.HasKey("IdEnsayo", "IdUsuario");

                    b.HasIndex("IdUsuario");

                    b.ToTable("AsistenciaEnsayos");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.AsistenciaEvento", b =>
                {
                    b.Property<int>("IdEvento")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<bool>("ConfirmoAsistencia")
                        .HasColumnType("bit");

                    b.Property<DateOnly>("FechaRespuesta")
                        .HasColumnType("date");

                    b.HasKey("IdEvento", "IdUsuario");

                    b.HasIndex("IdUsuario");

                    b.ToTable("AsistenciaEventos");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.Audicione", b =>
                {
                    b.Property<int>("IdAudicion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAudicion"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdAudicion")
                        .HasName("PK__Audicion__13AB881757467878");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Audiciones");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.Carrusel", b =>
                {
                    b.Property<int>("IdImagen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdImagen"));

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("RutaImagen")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TextoAlternativo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("IdImagen")
                        .HasName("PK__Carrusel__B42D8F2AFC5C7BA3");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Carrusel");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.CatalogoSeccione", b =>
                {
                    b.Property<int>("IdCatalogo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCatalogo"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdCatalogo")
                        .HasName("PK__Catalogo__FD0AC26CA326B181");

                    b.ToTable("CatalogoSecciones");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.Contactano", b =>
                {
                    b.Property<int>("IdContacto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContacto"));

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RedSocial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdContacto")
                        .HasName("PK__Contacta__A4D6BBFA80CAA33B");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Contactanos");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.Ensayo", b =>
                {
                    b.Property<int>("IdEnsayo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEnsayo"));

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("Hora")
                        .HasColumnType("time");

                    b.Property<string>("Lugar")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NombreEnsayo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdEnsayo")
                        .HasName("PK__Ensayos__56CD569CFE656BA0");

                    b.ToTable("Ensayos");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.Evento", b =>
                {
                    b.Property<int>("IdEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvento"));

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("Hora")
                        .HasColumnType("time");

                    b.Property<int>("IdTipoEvento")
                        .HasColumnType("int");

                    b.Property<string>("Lugar")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("NombreEvento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdEvento")
                        .HasName("PK__Eventos__034EFC0404815ECE");

                    b.HasIndex("IdTipoEvento");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.ReporteAsistenciaEvento", b =>
                {
                    b.Property<int>("IdReporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReporte"));

                    b.Property<DateOnly?>("FechaReporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdEvento")
                        .HasColumnType("int");

                    b.Property<int>("TotalAsistentes")
                        .HasColumnType("int");

                    b.Property<int>("TotalConfirmados")
                        .HasColumnType("int");

                    b.HasKey("IdReporte")
                        .HasName("PK__ReporteA__F9561136A76D2508");

                    b.HasIndex("IdEvento");

                    b.ToTable("ReporteAsistenciaEventos");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.SeccionAcercaNosotrosYportafolio", b =>
                {
                    b.Property<int>("IdSeccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSeccion"));

                    b.Property<string>("ContenidoTexto")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8000)");

                    b.Property<int>("IdCatalogo")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<string>("TextoAlternativo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdSeccion")
                        .HasName("PK__SeccionA__CD2B049FE983C9D2");

                    b.HasIndex("IdCatalogo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("SeccionAcercaNosotrosYPortafolio");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.TipoEvento", b =>
                {
                    b.Property<int>("IdTipoEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoEvento"));

                    b.Property<string>("NombreTipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdTipoEvento")
                        .HasName("PK__TipoEven__CDB3A3BEB64D03F2");

                    b.ToTable("TipoEvento");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("PIA_PROGRAMACIONWEB.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("PIA_PROGRAMACIONWEB.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PIA_PROGRAMACIONWEB.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("PIA_PROGRAMACIONWEB.Models.dbModels.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.AsistenciaEnsayo", b =>
                {
                    b.HasOne("PIA_PROGRAMACIONWEB.Models.dbModels.Ensayo", "IdEnsayoNavigation")
                        .WithMany("AsistenciaEnsayos")
                        .HasForeignKey("IdEnsayo")
                        .IsRequired()
                        .HasConstraintName("FK__Asistenci__IdEns__3E1D39E1");

                    b.HasOne("PIA_PROGRAMACIONWEB.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("AsistenciaEnsayos")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__Asistenci__IdUsu__3F115E1A");

                    b.Navigation("IdEnsayoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.AsistenciaEvento", b =>
                {
                    b.HasOne("PIA_PROGRAMACIONWEB.Models.dbModels.Evento", "IdEventoNavigation")
                        .WithMany("AsistenciaEventos")
                        .HasForeignKey("IdEvento")
                        .IsRequired()
                        .HasConstraintName("FK__Asistenci__IdEve__3A4CA8FD");

                    b.HasOne("PIA_PROGRAMACIONWEB.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("AsistenciaEventos")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__Asistenci__IdUsu__3B40CD36");

                    b.Navigation("IdEventoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.Audicione", b =>
                {
                    b.HasOne("PIA_PROGRAMACIONWEB.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("Audiciones")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_Audiciones_Usuario");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.Carrusel", b =>
                {
                    b.HasOne("PIA_PROGRAMACIONWEB.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("Carrusels")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_Carrusel_Usuario");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.Contactano", b =>
                {
                    b.HasOne("PIA_PROGRAMACIONWEB.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("Contactanos")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_Contactanos_Usuario");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.Evento", b =>
                {
                    b.HasOne("PIA_PROGRAMACIONWEB.Models.dbModels.TipoEvento", "IdTipoEventoNavigation")
                        .WithMany("Eventos")
                        .HasForeignKey("IdTipoEvento")
                        .IsRequired()
                        .HasConstraintName("FK_Eventos_TipoEvento");

                    b.Navigation("IdTipoEventoNavigation");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.ReporteAsistenciaEvento", b =>
                {
                    b.HasOne("PIA_PROGRAMACIONWEB.Models.dbModels.Evento", "IdEventoNavigation")
                        .WithMany("ReporteAsistenciaEventos")
                        .HasForeignKey("IdEvento")
                        .IsRequired()
                        .HasConstraintName("FK__ReporteAs__IdEve__51300E55");

                    b.Navigation("IdEventoNavigation");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.SeccionAcercaNosotrosYportafolio", b =>
                {
                    b.HasOne("PIA_PROGRAMACIONWEB.Models.dbModels.CatalogoSeccione", "IdCatalogoNavigation")
                        .WithMany("SeccionAcercaNosotrosYportafolios")
                        .HasForeignKey("IdCatalogo")
                        .IsRequired()
                        .HasConstraintName("FK__SeccionAc__IdCat__498EEC8D");

                    b.HasOne("PIA_PROGRAMACIONWEB.Models.dbModels.ApplicationUser", "IdUsuarioNavigation")
                        .WithMany("SeccionAcercaNosotrosYportafolios")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_SeccionAcercaNosotrosYPortafolio_Usuario");

                    b.Navigation("IdCatalogoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.ApplicationUser", b =>
                {
                    b.Navigation("AsistenciaEnsayos");

                    b.Navigation("AsistenciaEventos");

                    b.Navigation("Audiciones");

                    b.Navigation("Carrusels");

                    b.Navigation("Contactanos");

                    b.Navigation("SeccionAcercaNosotrosYportafolios");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.CatalogoSeccione", b =>
                {
                    b.Navigation("SeccionAcercaNosotrosYportafolios");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.Ensayo", b =>
                {
                    b.Navigation("AsistenciaEnsayos");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.Evento", b =>
                {
                    b.Navigation("AsistenciaEventos");

                    b.Navigation("ReporteAsistenciaEventos");
                });

            modelBuilder.Entity("PIA_PROGRAMACIONWEB.Models.dbModels.TipoEvento", b =>
                {
                    b.Navigation("Eventos");
                });
#pragma warning restore 612, 618
        }
    }
}
